CREATE DATABASE FINAPP;

CREATE TABLE FINAPP.MESSAGES
(
  MESSAGE_ID      INTEGER      NOT NULL AUTO_INCREMENT,
  MESSAGE_TEXT    TEXT         NOT NULL,
  USER_ID         INTEGER      NOT NULL,
  THREAD_ID       INTEGER      NOT NULL,
  PRIMARY KEY (MESSAGE_ID)
);

CREATE TABLE FINAPP.USERS
(
  USER_ID        INTEGER      NOT NULL AUTO_INCREMENT,
  USER_NAME      VARCHAR(50)  NOT NULL,
  PASSWORD       VARCHAR(255)     NULL,
  CASH           DECIMAL(15,2) NOT NULL,
  PRIMARY KEY(USER_ID)
);

CREATE TABLE FINAPP.STOCKS
(
  STOCK_ID        INTEGER      NOT NULL AUTO_INCREMENT,
  COMPANY_NAME    VARCHAR(50)      NULL,
  SYMBOL          VARCHAR(10)  NOT NULL,
  EXCHANGE_ID     INTEGER          NULL,
  PRIMARY KEY (STOCK_ID)
);

CREATE TABLE FINAPP.EXCHANGES
(
  EXCHANGE_ID     INTEGER      NOT NULL  AUTO_INCREMENT,
  EXCHANGE_NAME   VARCHAR(100) NOT NULL,
  PRIMARY KEY(EXCHANGE_ID)
);

CREATE TABLE FINAPP.RECIPIENTS
(
  THREAD_ID       INTEGER      NOT NULL,
  USER_ID         INTEGER      NOT NULL,
  STATUS          VARCHAR(10)      NULL DEFAULT 'INVITE',
  PRIMARY KEY(THREAD_ID, USER_ID) 
);

CREATE TABLE FINAPP.TRADES 
(
  TRADE_ID        INTEGER      NOT NULL AUTO_INCREMENT,
  USER_ID         INTEGER      NOT NULL,
  STOCK_ID        INTEGER      NOT NULL,
  STOCK_PRICE     DECIMAL(15,2)    NULL,
  QUANTITY        INTEGER          NULL,
  STATUS          VARCHAR(10)  NOT NULL DEFAULT 'WATCH',
  PRIMARY KEY (TRADE_ID)
);

CREATE TABLE FINAPP.QUOTES
(
  STOCK_ID        INTEGER      NOT NULL,
  CLOSING_DATE    DATE         NOT NULL,
  CLOSING_PRICE   DECIMAL(15,2)NOT NULL,
  PRIMARY KEY (STOCK_ID, CLOSING_DATE)
);